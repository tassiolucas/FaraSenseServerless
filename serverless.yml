service: farasense-api

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  region: us-east-1
  runtime: nodejs8.10
  environment:
    CURRENT_SENSOR_TABLE: farasenseDb
    CURRENT_SENSOR_TABLE_MIN: farasenseDb_min
    CURRENT_SENSOR_TABLE_HOUR: farasenseDb_hour
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CURRENT_SENSOR_TABLE}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CURRENT_SENSOR_TABLE_MIN}"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CURRENT_SENSOR_TABLE_HOUR}"

functions:
  create:
    handler: create.create
    events:
      - http:
          path: current_sensor
          method: post
          cors: true

  get:
    handler: get.get
    events:
      - http:
          path: current_sensor/{id}/{start}/{end}
          method: get
          cors: true

  transform:
    handler: transform.transformMinToHour
    events:
      - schedule:
          rate: rate(1 hour)
          timezone: America/Sao_Paulo
